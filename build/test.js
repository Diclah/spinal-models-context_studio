'use strict';

spinal.contextStudio.graph.getApp('smartConnector', ['hasDevice', 'hasEndpoint', 'hasEndpointGroup']).then(smartConnector => {

  network = new SpinalNetwork("network1", "smartConnector", "10.0.0.1", "mariano", "#admin");

  device1 = new SpinalDevice("device1", "device1 id attribute");
  device2 = new SpinalDevice("device2", "device2 id attribute");
  device3 = new SpinalDevice("device3", "device3 id attribute");

  endpointGroup1 = new AbstractElement("endpointGroup1", "endpointGroup");

  endpoint1 = new SpinalEndpoint("endpoint1", "endpoint1 id attribute", "endpoint1 value", "endpoint1 unit", "endpoint1 dataType");
  endpoint2 = new SpinalEndpoint("endpoint2", "endpoint2 id attribute", "endpoint2 value", "endpoint2 unit", "endpoint2 dataType");
  endpoint3 = new SpinalEndpoint("endpoint3", "endpoint3 id attribute", "endpoint3 value", "endpoint3 unit", "endpoint3 dataType");
  endpoint4 = new SpinalEndpoint("endpoint4", "endpoint4 id attribute", "endpoint4 value", "endpoint4 unit", "endpoint4 dataType");
  endpoint5 = new SpinalEndpoint("endpoint5", "endpoint5 id attribute", "endpoint5 value", "endpoint5 unit", "endpoint5 dataType");
  endpoint6 = new SpinalEndpoint("endpoint6", "endpoint6 id attribute", "endpoint6 value", "endpoint6 unit", "endpoint6 dataType");
  endpoint7 = new SpinalEndpoint("endpoint7", "endpoint7 id attribute", "endpoint7 value", "endpoint7 unit", "endpoint7 dataType");
  endpoint8 = new SpinalEndpoint("endpoint8", "endpoint8 id attribute", "endpoint8 value", "endpoint8 unit", "endpoint8 dataType");
  endpoint9 = new SpinalEndpoint("endpoint9", "endpoint9 id attribute", "endpoint9 value", "endpoint9 unit", "endpoint9 dataType");

  networkNode = spinal.contextStudio.graph.addNode(network);

  device1Node = networkNode.addToExistingRelationByApp('smartConnector', 'hasDevice', device1, true).node;
  device2Node = networkNode.addToExistingRelationByApp('smartConnector', 'hasDevice', device2, true).node;
  device3Node = networkNode.addToExistingRelationByApp('smartConnector', 'hasDevice', device3, true).node;

  device1Node.addToExistingRelationByApp('smartConnector', 'hasEndpoint', endpoint1, true);
  device1Node.addToExistingRelationByApp('smartConnector', 'hasEndpoint', endpoint2, true);
  device1Node.addToExistingRelationByApp('smartConnector', 'hasEndpoint', endpoint3, true);
  device1Node.addToExistingRelationByApp('smartConnector', 'hasEndpoint', endpoint4, true);

  device2Node.addToExistingRelationByApp('smartConnector', 'hasEndpoint', endpoint5, true);
  device2Node.addToExistingRelationByApp('smartConnector', 'hasEndpoint', endpoint6, true);
  device2Node.addToExistingRelationByApp('smartConnector', 'hasEndpoint', endpoint7, true);
  device2Node.addToExistingRelationByApp('smartConnector', 'hasEndpoint', endpoint8, true);

  endpointGroup1Node = device3Node.addToExistingRelationByApp('smartConnector', 'hasEndpointGroup', endpointGroup1, true).node;
  endpointGroup1Node.addToExistingRelationByApp('smartConnector', 'hasEndpoint', endpoint8, true);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,